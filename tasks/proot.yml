---
## adopted from https://github.com/Neo-Oli/termux-ubuntu/blob/master/ubuntu.sh

- name: install proot
  command: "pkg install -qy proot wget"
  environment:
    DEBIAN_FRONTEND: noninteractive
  register: pkg_result
  changed_when: pkg_result.stdout |default('') is search(termux_pkg_changed)

- name: create directory for ubuntu proot
  file:
    state: directory
    path: "{{ ubuntu_fs }}"

- name: add image host to dns resolver in docker termux
  ## add image host name in static hosts, see:
  ## https://github.com/xeffyr/termux-docker#known-issues
  block:
    - name: add static hostname in docker termux
      lineinfile:
        path: /system/etc/static-dns-hosts.txt
        line: "{{ image_host }}"
        ## docker does not allow atomic updates of /etc/hosts
        ## see https://github.com/ansible/ansible/issues/13981
        ## see https://docs.docker.com/network/bridge/#differences-between-user-defined-bridges-and-the-default-bridge
        unsafe_writes: true
      register: _static_dns_hosts

    - name: update static dns in docker termux
      command: /system/bin/update-static-dns
      when: _static_dns_hosts is changed
  when: ansible_connection == 'docker'

- name: download ubuntu image
  shell:
    cmd: |
      case $(dpkg --print-architecture) in
        aarch64)  arch="arm64" ;;
        arm)      arch="armhf" ;;
        amd64)    arch="amd64" ;;
        i*86)     arch="i386"  ;;
        x86_64)   arch="amd64" ;;
        *)        echo "unknown architecture"; exit 1 ;;
      esac
      wget -nv -O "{{ tarball }}" "{{ url }}"
    creates: "{{ tarball }}"
  vars:
    base_url: "https://{{ image_host }}/core/{{ codename }}/current"
    url: "{{ base_url }}/ubuntu-{{ codename }}-core-cloudimg-${arch}-root.tar.gz"

- name: decompress ubuntu image
  command:
    cmd: proot --link2symlink tar -xf "{{ tarball }}" --exclude=dev
    chdir: "{{ ubuntu_fs }}"
    creates: "{{ ubuntu_fs }}/bin/bash"


- name: set default absolute path of sdcard
  set_fact:
    termux_sdcard_dir_abspath: "{{ termux_sdcard_dir }}"
  when: not termux_sdcard_abspath |default('',true)
  tags: termux_core_sdcard

- name: detect absolute path of sdcard mount point
  stat:
    path: "{{ termux_sdcard_dir }}"
  register: _termux_sdcard_dir_stat
  when: termux_sdcard_abspath is search('SDCARD_ID')
  tags: termux_core_sdcard

- name: substitute path of sdcard mount point
  set_fact:
    termux_sdcard_abspath: "{{ termux_sdcard_abspath |replace('SDCARD_ID',sdcard_id) }}"
  vars:
    link_target: "{{ _termux_sdcard_dir_stat.stat.lnk_target }}"
    sdcard_id: "{{ link_target |regex_replace('^(.*)/([0-9A-Z-]+)/(.*)$','\\2') }}"
  when: termux_sdcard_abspath is search('SDCARD_ID')
  tags: termux_core_sdcard

- name: create proot launch script
  template:
    src: ubuntu/start-script.sh
    dest: "{{ start_script }}"
    mode: 0750
  tags: termux_core_sdcard
...
